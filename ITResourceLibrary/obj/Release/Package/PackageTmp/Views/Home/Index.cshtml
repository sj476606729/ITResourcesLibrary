@{
    ViewBag.Title = "Home Page";
}
<link href="~/Content/Loading.css" rel="stylesheet" />
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script src="~/Frame/bootstrap/js/bootstrap-treeview.js"></script>
<link href="~/Frame/bootstrap/css/bootstrap.css" rel="stylesheet" />
<link href="~/Content/KindCodePage.css" rel="stylesheet" />

<div class="KindCode">
    <div class="body-left">
        <div class="left-head-one">
            <div class="font-operate" style="width:30%;" onclick="AddData()">添加数据</div>
            <div class="font-operate" style="width:30%;" onclick="AddKind()">添加分类</div>
            <div class="font-operate" style="width:20%;" onclick="Modify()">修改</div>
            <div class="font-operate" style="width:20%;" onclick="Delete()">删除</div>
        </div>
        <div class="left-head-one">
            <div class="font-operate" style="width:30%;" id="move" onclick="Move(this)">移动分类</div>
            <div class="font-operate" style="width:30%;" onclick="Shift(0)">切换模式</div>
        </div>
        <div class="left-tree">
            <div id="load" style="height:20%;width:100%;"><div class='loader loader--spinningDisc' style="margin-left:10%;"></div></div>
            <div id="tree" style="width:100%;height:100%;overflow:auto;font-size:14px"></div>
        </div>
    </div>

    <div class="Search">
        <div class="left-head-one">
            @Html.DropDownList("select", new SelectList(ViewBag.select, "Value", "Name"), new { @class = "form-control", @style = "width:50%;height:94%;margin-right:2%;" })
            <div class="font-operate" style="width:23%;" onclick="Shift(1)">切换</div>
            <div class="font-operate" style="width:25%;" onclick="SearchModify()">保存修改</div>
        </div>
        <div class="left-head-one">
            <input class="form-control" id="search" style="width:75%;height:96%" onkeydown='if(event.keyCode==13){Search()}' ondblclick="Shift(1)" placeholder="搜索(双击切换)" />
            <div class="font-operate" style="width:25%;" onclick="Search()">搜索</div>
        </div>
        <div class="search-list">
            <ul style="width:100%;overflow:auto" id="list-search"></ul>

        </div>
    </div>

    <div class="Code-body">
        <iframe id="frame" src="~/Views/tinyMce/edit.html" style="width:100%;height:100%;border:none;"></iframe>
    </div>

    <div class="body-right">
        <ul class="operateNews" id="list-operate"></ul>
    </div>

</div>


<script v="1.0">
    var AllNode, Nodeid, IsKind, NodeText, NodeAuthor
    $(function () {
        $.ajax({
                type: "get",
                url: '@Url.Action("GetKind")',//注意此文件必须与当前文件在同一目录下
                dataType: "json",
                error: function (result) {
                    alert(result)
                    alert("初始化数据无返回");
                    $('#load').remove();
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    AllNode = result;
                    var data = TreeData(AllNode, "无");

                    NodeOperate(data);
                    $('#load').remove();
                }
            });

    });
    //修改
    function Modify() {
        if (Nodeid == null) { return; }
        var Old_AllNode = JSON.stringify(AllNode);
        if (IsKind) {
            var name = $(window.parent.window.document.getElementById("kind")).val();
            for (var i = 0; i < AllNode.length; i++) {
                if (AllNode[i]["Id"] == Nodeid) {
                    AllNode[i]["text"] = name;
                    var id = Nodeid
                    var data = TreeData(AllNode, "无");
                    NodeOperate(data);
                    Nodeid=id
                    break;
                }
            }
            var pd = { Name: name, Key: Nodeid }
            $.ajax({
                data: pd,
                type: "post",
                url: '@Url.Action("ModifyKind")',
                dataType: "json",
                error: function (textstatus) {
                    AllNode = JSON.parse(Old_AllNode);
                    var data = TreeData(AllNode, "无");
                    NodeOperate(data);
                    alert('修改分类无返回');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var data = eval(result)

                    if (data["result"] == "修改失败") alert("修改失败");
                }
            });
        } else {
            if (NodeAuthor != '@Html.Action("GetUserName","Shared")') { alert("不能修改非本账户代码数据"); return; }
            if (confirm("确定修改吗？") == false) { return }
            var title = $(window.parent.window.document.getElementById("title")).val(), Code = encodeURI(window.document.getElementById("frame").contentWindow.getHtml());
            var visible = $(window.parent.window.document.getElementById("check")).val()
            for (var i = 0; i < AllNode.length; i++) {
                if (AllNode[i]["Id"] == Nodeid) {
                    if (title != AllNode[i]["text"]) {
                        AllNode[i]["text"] = title;
                        var id=Nodeid
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data);
                        Nodeid=id
                    }
                    break;

                }
            }
            var pd = { Title: title, Code: Code, Key: Nodeid, OldTitle: NodeText, Visible: visible }
            $.ajax({
                type: "post",
                url: '@Url.Action("ModifyCode")',//注意此文件必须与当前文件在同一目录下
                data: pd,
                dataType: "json",
                error: function (textstatus) {
                    AllNode = JSON.parse(Old_AllNode);
                    var data = TreeData(AllNode, "无");
                    NodeOperate(data);
                    alert('修改代码无返回');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var obj = result;

                    if ((obj.result + "").substr(0, 2) == "出错") {
                        alert(obj.result);
                        AllNode = JSON.parse(Old_AllNode);
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data);
                    }

                }
            });
        }
    }
    //删除
        function Delete() {
            if (Nodeid == null) { return; }
            var Old_AllNode = JSON.stringify(AllNode);
            if (IsKind) {
                var pd = {Key: Nodeid }
                $.ajax({
                    type: "post",
                    url: '@Url.Action("DeleteKind")',//注意此文件必须与当前文件在同一目录下
                    data: pd,
                    dataType: "json",
                    error: function (textstatus) {

                        alert('删除返回出错');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        if ((obj.result + "").substr(0, 2) == "出错") { alert(obj.result); return; }
                        var data = [];
                        for (var i = 0; i < AllNode.length; i++) {
                            if (AllNode[i]["Id"] != Nodeid) {
                                data.push(AllNode[i]);
                            }
                        }
                        AllNode = data;
                        var jsonDataTree = TreeData(data, "无");
                        NodeOperate(jsonDataTree);
                    }
                });
            } else {
                if (NodeAuthor != '@Html.Action("GetUserName","Shared")') { alert("不能删除非本账户的代码数据"); return; }
                if (confirm("确定删除这条数据吗？") == false) return
                var title = $(window.parent.window.document.getElementById("title")).val();
                var pd = {Key: Nodeid, Title: NodeText }
                $.ajax({
                    type: "post",
                    url: '@Url.Action("DeleteCode")',//注意此文件必须与当前文件在同一目录下
                    data: pd,
                    dataType: "json",
                    error: function (textstatus) {

                        alert('删除返回出错');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        if ((obj.result + "").substr(0, 2) == "出错") { alert(obj.result); return; }
                         //=======================================删除提交记录信息===================================



                        //=======================================删除提交记录信息===================================
                        var data = [];
                        for (var i = 0; i < AllNode.length; i++) {
                            if (AllNode[i]["Id"] != Nodeid) {
                                data.push(AllNode[i]);
                            }
                        }
                        AllNode = data;
                        var jsonDataTree = TreeData(data, "无");
                        NodeOperate(jsonDataTree);

                    }
                });
            }
        }
        //移动
        var node_text;
        function Move(e) {
            if (Nodeid == null) { return; }
            var new_node;
            var  node_newtext;
            if ($('#move').html() == "移动分类") {
                node_move = Nodeid; $('#move').html('选择分类');
                node_text = NodeText;
            } else if ($('#move').html() == "选择分类") {
                if (IsKind == false) { alert('请选择分类'); return; }
                new_node = Nodeid; node_newtext = NodeText;
                if (confirm("确定将(" + node_text + ")移动到(" + node_newtext + ")分类中吗?") == true) {
                    var old_AllNode = JSON.stringify(AllNode);
                    for (var i = 0; i < AllNode.length; i++) {
                        if (AllNode[i]["Id"] == node_move) {
                            AllNode[i]["ParentId"] = new_node;
                            var data = TreeData(AllNode, "无");
                            NodeOperate(data); $('#move').html('移动分类');
                            var pd = { node: node_move, newnode: new_node }
                            $.ajax({
                                type: "post",
                                url: '@Url.Action("MoveKind")',//注意此文件必须与当前文件在同一目录下
                                data: pd,
                                dataType: "json",
                                error: function (textstatus) {
                                    $('#move').html('移动分类')
                                    alert('移动返回出错');
                                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                                },
                                success: function (result) {//result为任意定义的用于装载参数变量
                                    var obj = result;
                                    if (obj.result != "移动成功") {
                                        alert(obj.result);
                                        AllNode = JSON.parse(old_AllNode);
                                        var data = TreeData(AllNode, "无");
                                        NodeOperate(data); $('#move').html('移动分类')
                                    }
                                }
                            });
                        }
                    }
                }
            }

        }
    //添加分类
        function AddKind() {
            var id = Nodeid;
            var kind = $(window.parent.window.document.getElementById("kind")).val();
            if (id == null || kind.length == 0) { id = "无"; }
            var pd = { Name: kind, ParentId: id }
            $.ajax({
                type: "post",
                url: '@Url.Action("AddKind")',//注意此文件必须与当前文件在同一目录下
                data: pd,
                dataType: "json",
                error: function (textstatus) {

                    alert('添加返回出错');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var obj = eval(result);
                    if (obj.result.length <= 6) { alert(obj.result); return; }
                    var color;
                    if (id == "无") { color = "brown" } else { color = "#4B0082" }
                    var data = { "Id": obj.result, "text": kind, "ParentId": id, "color": color, "icon": "glyphicon glyphicon-folder-open" }
                    AllNode.push(data);
                    var jsonDataTree = TreeData(AllNode, "无");
                    NodeOperate(jsonDataTree);
                }
            });
        }
     //添加数据
        function AddData() {
            var data_ = window.document.getElementById("frame").contentWindow.getHtml() + "";
            if (Nodeid == null) { return; }
            if (IsKind == false) { alert('不能将数据作为分类添加子项'); return }
            var data = encodeURI(data_);
            var title = $(window.parent.window.document.getElementById("title")).val();
            var id = Nodeid;
            var visible = $(window.parent.window.document.getElementById("check")).val()
            var pd = { Title: title, Code: data, Key: id, User: '@Html.Action("GetUserName","Shared")', Visible:visible }
            $.ajax({
                type: "post",
                url: '@Url.Action("AddCode")',//注意此文件必须与当前文件在同一目录下
                data: pd,
                dataType: "json",
                error: function (textstatus) {

                    alert('添加返回失败');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var obj = eval(result);
                    if ((obj.result + "").substr(0, 2) == "出错") {
                        alert(obj.result);
                        result;
                    }
                    else {
                    //=======================================添加提交记录信息===================================

                    //=======================================添加提交记录信息===================================
                    var data = { "Id": obj.result, "text": title, "ParentId": id, "color": "black", "icon": "glyphicon glyphicon-pencil" }
                    AllNode.push(data);
                    var jsonDataTree = TreeData(AllNode, "无");
                    NodeOperate(jsonDataTree);
                    }
                }
            });
        }

</script>
@*-------------------------------------------------------------------------------*@

@*-------------------------------------------------------------------------------*@
<script v="1.0">
    //处理分类为树状图
        function TreeData(data, parentId) {
            Nodeid = null
            var itemArr = [];
            for (var i = 0; i < data.length; i++) {
                var node = data[i];
                //data.splice(i, 1)
                if (node["ParentId"] == parentId) {
                    var newNode = { Id: node.Id, text: node["text"], color: node.color, icon: node.icon };
                    for (var j = 0; j < data.length; j++) {
                        if (data[j].ParentId == node.Id) {
                            newNode["nodes"] = TreeData(data, node.Id); break;
                        }
                    }
                    itemArr.push(newNode);
                }
            }
            return itemArr;
        }
        //节点操作
        function NodeOperate(jsonDataTree) {
            //导入分类数据
            $('#tree').treeview({
                data: jsonDataTree,        // data is not optionals
                levels: 1,
                backColor: 'white',
                collapseIcon: 'glyphicon glyphicon-chevron-down'
            })
            //选中操作
            $('#tree').on('nodeSelected', function (event, node) {
                Nodeid = node.Id; NodeText = node.text;

                IsKind = false;
                if (node.color != "black") {
                    IsKind = true; $('#addcode').attr("disabled", false);
                    $('#addkind').attr("disabled", false);
                    return;
                }
                $('#addcode').attr("disabled", true);
                $('#addkind').attr("disabled", true);
                $.ajax({
                    type: "get",
                    url: '@Url.Action("GetCode")?Title=' + escape(NodeText),//注意此文件必须与当前文件在同一目录下
                    dataType: "json",
                    error: function (textstatus) {
                        alert('无返回数据,请刷新尝试')
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        window.document.getElementById("frame").contentWindow.setHtml(decodeURI(obj["Code"]));
                        $(window.parent.window.document.getElementById("title")).val(obj["Title"]);
                        NodeAuthor = obj["Author"];
                        $(window.parent.window.document.getElementById("author")).html("作者：" + obj["Author"]);
                        if (obj["Visible"] == "Invisible") {
                            $(window.parent.window.document.getElementById("check")).prop("checked", false)
                            $(window.parent.window.document.getElementById("check")).val('Invisible')
                        } else {
                            $(window.parent.window.document.getElementById("check")).prop("checked", "true")
                            $(window.parent.window.document.getElementById("check")).val('Visible')
                        }
                    }
                });

            });
        }
        //切换
        Shift = function (id) {
            if (id == 0) {
                $('.body-left').css("display", "none")
                $('.Search').css('display', "block")
                
            } else {
                $('.body-left').css("display", "block")
                $('.Search').css('display', "none")
                $('#search').focus()
            }

        }
</script>



<script v="1.0">
    //搜索标题
var ID, kindPath;
function Search() {
    var search = $('#search').val();
    var n_typeselect = $("#select").val();
    var pd = { Title: search, TypeSelect: n_typeselect }
    $.ajax({

        type: "post",
        url: '@Url.Action("SearchTitle")',
        data: pd,
        dataType: "json",
        error: function (textstatus) {
            alert('搜索无返回');
            // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
        },
        success: function (result) {//result为任意定义的用于装载参数变量
            var datanav = result;
            $('#list-search').html('')
            for (var i = 0; i < datanav.length; i++) {

                $('#list-search').append(datanav[i].title)
                //$('#list-search').append('<li onclick="ShowData(&quot;' + datanav[i] +'&quot;,this)">' + datanav[i] + '</li>')
            }
        }
    });
}
function ShowData(data, e) {
    var title = data;
    $(ID).css("color", "indigo")
    ID = e;
    $(e).css("color", "brown")
    $(window.parent.window.document.getElementById("title")).val(title);
    $.ajax({
        type: "get",
        url: '@(Url.Action("GetCode"))?Title=' + escape(title),//注意此文件必须与当前文件在同一目录下
        dataType: "json",
        error: function (textstatus) {
            alert(JSON.stringify(textstatus))
            alert('数据返回失败')
        },
        success: function (result) {//result为任意定义的用于装载参数变量
            var obj = eval(result);
            window.document.getElementById("frame").contentWindow.setHtml(decodeURI(obj["Code"]));
            $(window.parent.window.document.getElementById("kind")).val(obj["Kind"]);
            NodeText = title
            $(window.parent.window.document.getElementById("author")).html("作者：" + obj["Author"]);
            NodeAuthor = obj["Author"];
            if (obj["Visible"] == "Invisible") {
                $(window.parent.window.document.getElementById("check")).prop("checked", false)
                $(window.parent.window.document.getElementById("check")).val('Invisible')
            } else {
                $(window.parent.window.document.getElementById("check")).prop("checked", "true")
                $(window.parent.window.document.getElementById("check")).val('Visible')
            }
        }
    });
}
//搜索修改
function SearchModify() {

    if ('@Html.Action("GetUserName","Shared")' != NodeAuthor) { alert("不能修改非本账户代码数据"); return; }
    var title = $(window.parent.window.document.getElementById("title")).val(), Code = encodeURI(window.document.getElementById("frame").contentWindow.getHtml());
    var visible = $(window.parent.window.document.getElementById("check")).val()
    if (title != NodeText) {
        alert("搜索界面下禁止修改标题！");
        return;
    }
    var pd = { Title: title, Code: Code, Visible: visible }
    $.ajax({
        type: "post",
        url: '@Url.Action("ModifySearch")',
        data: pd,
        dataType: "json",
        error: function (textstatus) {

            alert('修改代码返回出错');
            // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
        },
        success: function (result) {//result为任意定义的用于装载参数变量
            var obj = eval(result);
            alert(obj.result)
        }
    });
}

</script>





<script>

    window.onload = function () {
        $.ajax({
            type: "get",
            url: '@Url.Action("GetAllOperate")',//注意此文件必须与当前文件在同一目录下
            dataType: "json",
            error: function (textstatus) {

                alert('出错');
                // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
            },
            success: function (result) {//result为任意定义的用于装载参数变量
                //alert(JSON.stringify(result))
                $('#list-operate').html('')
                for (var i = 0; i < result.length; i++) {
                    var o = 'ShowData(&quot;' + result[i].Title +'&quot;,this)'
                    $('#list-operate').append('<li >' + (i + 1) + '、' + result[i].User + '，' + result[i].Operate + '<a href="#" onclick="' + o+'">【' + result[i].Title + '】</a>{' + result[i].Kind+ '}</li>')
                }
            }
        });
    }

</script>