@{
    Layout = null;
}
<link href="~/Content/Loading.css" rel="stylesheet" />
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script src="~/Frame/bootstrap/js/bootstrap-treeview.js"></script>
<link href="~/Frame/bootstrap/css/bootstrap.css" rel="stylesheet" />
<table style="width:99%;height:100%;margin-left:1%;">
    <tr style="height:5%">
        <td style="width:100%;padding-top:1%" class="btn-group">
            <button style="width:23%; float:left;font-size:70%" class="btn btn-default" id="addcode" onclick="AddData()">添加数据</button>
            <button style="width:23%;float:left;font-size:70%" class="btn btn-default" id="addkind" onclick="AddKind()">添加分类</button>
            <button style="width:19%;float:left;font-size:70%" class="btn btn-default" onclick="Modify()">修改</button>
            <button style="width:19%;float:left;font-size:70%" class="btn btn-default" onclick="Delete()">删除</button>
            <button style="width:15%;float:left;font-size:70%" class="btn btn-default" onclick="Shift()">切换</button>
        </td>
    </tr>
    <tr style="height:5%">
        <td style="width:100%;padding-top:1%">
            <button style="width:98%;" id="move" class="btn btn-default" onclick="Move(this)">移动</button>
        </td>
    </tr>
    <tr style="height:90%">
        <td valign="top" style="padding-top:2%">
            <div id="load" style="height:20%"><div class='loader loader--spinningDisc'></div></div>
            <div id="tree" style="width:100%;overflow:auto;font-size:13px"></div>
        </td>
    </tr>
    
</table>

<script>
        var Nodeid, NodeText, IsKind = false;
        var AllNode, node_move, typeid;
        var frames, NodeAuthor, ParentKind;

        $(function () {
            $('#body').css("height", document.documentElement.clientHeight);
            frames = window.parent.window.document.getElementById("frame");
            $.ajax({
                type: "get",
                url: '@Url.Action("GetKind","Kind",new { id="Initial"})',//注意此文件必须与当前文件在同一目录下
                dataType: "json",
                error: function () {
                    alert("初始化数据无返回");
                    $('#load').remove();
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    AllNode = eval(result);
                    var data = TreeData(AllNode, "无");
                    ParentKind = JSON.stringify(data);
                    NodeOperate(data);
                    $('#load').remove();
                    var pd = { Kind:ParentKind }
                    $.ajax({
                        type: "post",
                        data:pd,
                        url: '@Url.Action("GetSelect")',//注意此文件必须与当前文件在同一目录下
                        dataType: "json",
                        error: function (textstatus) {
                            alert('搜索标题初始化无返回值');
                            // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                        }, success: function (_titles) {
                            typeid = _titles

                        }
                    });
                }
            });

        });

        //处理分类为树状图
        function TreeData(data, parentId) {

            var itemArr = [];
            for (var i = 0; i < data.length; i++) {
                var node = data[i];
                //data.splice(i, 1)
                if (node["ParentId"] == parentId) {
                    var newNode = { Id: node.Id, text: node["text"], color: node.color, icon: node.icon };
                    for (var j = 0; j < data.length; j++) {
                        if (data[j].ParentId == node.Id) {
                            newNode["nodes"] = TreeData(data, node.Id); break;
                        }
                    }
                    itemArr.push(newNode);
                }
            }
            return itemArr;
        }
        //节点操作
        function NodeOperate(jsonDataTree) {
            //导入分类数据
            $('#tree').treeview({
                data: jsonDataTree,        // data is not optionals
                levels: 1,
                backColor: 'white',
                collapseIcon: 'glyphicon glyphicon-chevron-down'
            })
            //选中操作
            $('#tree').on('nodeSelected', function (event, node) {
                Nodeid = node.Id; NodeText = node.text;
                IsKind = false;
                if (node.color != "black") {
                    IsKind = true; $('#addcode').attr("disabled", false);
                    $('#addkind').attr("disabled", false);
                    return;
                }

                $('#addcode').attr("disabled", true);
                $('#addkind').attr("disabled", true);
                $.ajax({
                    type: "get",
                    url: '@Url.Action("GetCode","Kind")?Title=' + NodeText,//注意此文件必须与当前文件在同一目录下
                    dataType: "json",
                    error: function (textstatus) {
                        alert('无返回数据,请刷新尝试')
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        frames.contentWindow.document.getElementById("frame_").contentWindow.setHtml(decodeURI(obj["Code"]));
                        $(window.parent.window.document.getElementById("title")).val(obj["Title"]);
                        NodeAuthor = obj["Author"];
                        $(window.parent.window.document.getElementById("author")).html("作者：" + obj["Author"]);
                        
                        if (obj["Visible"] == "Invisible") {
                            $(window.parent.window.document.getElementById("check")).prop("checked",false)
                            $(window.parent.window.document.getElementById("check")).val('Invisible')
                        } else {
                            $(window.parent.window.document.getElementById("check")).prop("checked","true")
                            $(window.parent.window.document.getElementById("check")).val('Visible')}
                    }
                });

            });
        }
        //修改
        function Modify() {
            if (Nodeid == null) { return; }
            var Old_AllNode = JSON.stringify(AllNode);
            if (IsKind) {
                var name = $(window.parent.window.document.getElementById("kind")).val();

                for (var i = 0; i < AllNode.length; i++) {
                    if (AllNode[i]["Id"] == Nodeid) {
                        AllNode[i]["text"] = name;
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data); break;
                    }
                }
                var pd = { Name:name, Key:Nodeid }
                $.ajax({
                    data:pd,
                    type: "post",
                    url: '@Url.Action("ModifyKind", "Kind")',
                    dataType: "json",
                    error: function (textstatus) {
                        AllNode = JSON.parse(Old_AllNode);
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data);
                        alert('修改分类无返回');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var data = eval(result)

                        if (data["result"] == "修改失败") alert("修改失败");
                    }
                });
            } else {
                if (NodeAuthor != '@Html.Action("GetUserName","Shared")') { alert("不能修改非本账户代码数据"); return; }
                if (confirm("确定修改吗？") == false) { return }
                var title = $(window.parent.window.document.getElementById("title")).val(), Code = encodeURI(frames.contentWindow.document.getElementById("frame_").contentWindow.getHtml());
                var visible = $(window.parent.window.document.getElementById("check")).val()
                for (var i = 0; i < AllNode.length; i++) {
                    if (AllNode[i]["Id"] == Nodeid) {
                        if (title != AllNode[i]["text"]) {
                            var data = TreeData(AllNode, "无");
                            NodeOperate(data);
                        }
                        
                        break;
                        
                    }
                }
                var pd = { Title: title, Code: Code, Key: Nodeid, OldTitle: NodeText, Visible: visible }
                $.ajax({
                    type: "post",
                    url: '@Url.Action("ModifyCode", "Kind")',//注意此文件必须与当前文件在同一目录下
                    data: pd,
                    dataType: "json",
                    error: function (textstatus) {
                        AllNode = JSON.parse(Old_AllNode);
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data);
                        alert('修改代码无返回');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        if ((obj.result + "").substr(0, 2) == "出错") {
                            alert(obj.result);
                            AllNode = JSON.parse(Old_AllNode);
                            var data = TreeData(AllNode, "无");
                            NodeOperate(data);
                        }
                    }
                });
            }
        }
        //删除
        function Delete() {
            if (Nodeid == null) { return; }
            var Old_AllNode = JSON.stringify(AllNode);
            if (IsKind) {
                var pd = {Key: Nodeid }
                $.ajax({
                    type: "post",
                    url: '@Url.Action("DeleteKind")',//注意此文件必须与当前文件在同一目录下
                    data: pd,
                    dataType: "json",
                    error: function (textstatus) {

                        alert('删除返回出错');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        if ((obj.result + "").substr(0, 2) == "出错") { alert(obj.result); return; }
                        var data = [];
                        for (var i = 0; i < AllNode.length; i++) {
                            if (AllNode[i]["Id"] != Nodeid) {
                                data.push(AllNode[i]);
                            }
                        }
                        AllNode = data;
                        var jsonDataTree = TreeData(data, "无");
                        NodeOperate(jsonDataTree);
                        Nodeid = null;
                    }
                });
            } else {
                if ( NodeAuthor!='@Html.Action("GetUserName","Shared")') { alert("不能删除非本账户的代码数据"); return; }

                var pd = {Key: Nodeid, Title: NodeText }
                $.ajax({
                    type: "post",
                    url: '@Url.Action("DeleteCode")',//注意此文件必须与当前文件在同一目录下
                    data: pd,
                    dataType: "json",
                    error: function (textstatus) {

                        alert('删除返回出错');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        if ((obj.result + "").substr(0, 2) == "出错") { alert(obj.result); return; }
                        var data = [];
                        for (var i = 0; i < AllNode.length; i++) {
                            if (AllNode[i]["Id"] != Nodeid) {
                                data.push(AllNode[i]);
                            }
                        }
                        AllNode = data;
                        var jsonDataTree = TreeData(data, "无");
                        NodeOperate(jsonDataTree);
                        Nodeid = null;
                    }
                });
            }
        }
        //移动
        function Move(e) {
            if (Nodeid == null) { return; }
            var new_node;
            var node_text, node_newtext;
            if ($('#move').html() == "移动") {
                node_move = Nodeid; $('#move').html('选择分类');
                node_text = NodeText;
            } else if ($('#move').html() == "选择分类") {
                if (IsKind == false) { alert('请选择分类'); return; }
                new_node = Nodeid; node_newtext = NodeText;
                if (confirm("确定将(" + node_text + ")移动到(" + node_newtext + ")分类中吗?") == true) {
                    var old_AllNode = JSON.stringify(AllNode);
                    for (var i = 0; i < AllNode.length; i++) {
                        if (AllNode[i]["Id"] == node_move) {
                            AllNode[i]["ParentId"] = new_node;
                            var data = TreeData(AllNode, "无");
                            NodeOperate(data); $('#move').html('移动');
                            var pd = { id: "MoveKind", node: node_move, newnode: new_node }
                            $.ajax({
                                type: "post",
                                url: '../Ashx/Handler.ashx',//注意此文件必须与当前文件在同一目录下
                                data: pd,
                                dataType: "json",
                                error: function (textstatus) {

                                    alert('移动返回出错');
                                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                                },
                                success: function (result) {//result为任意定义的用于装载参数变量
                                    var obj = eval(result);
                                    if (obj.result != "移动成功") {
                                        alert(obj.result);
                                        AllNode = JSON.parse(old_AllNode);
                                        var data = TreeData(AllNode, "无");
                                        NodeOperate(data); $('#move').html('移动');
                                    }
                                }
                            });
                        }
                    }
                }
            }


        }
        //添加数据
        function AddData() {
            var data_ = frames.contentWindow.document.getElementById("frame_").contentWindow.getHtml() + "";
            if (data_.indexOf("<hr />") < 0 || data_.indexOf("<p>参考网址：<a href=") < 0) { alert("添加代码不规范"); return; }
            if (data_.indexOf("<hr />") < data_.indexOf("<p>参考网址：<a href=")) { alert("添加代码不规范"); return; }
            if (Nodeid == null) { return; }
            var data = encodeURI(data_);
            var title = $(window.parent.window.document.getElementById("title")).val();
            var id = Nodeid;
            var visible = $(window.parent.window.document.getElementById("check")).val()
            var pd = { Title: title, Code: data, Key: id, User: '@Html.Action("GetUserName","Shared")', Visible:visible }
            $.ajax({
                type: "post",
                url: '@Url.Action("AddCode")',//注意此文件必须与当前文件在同一目录下
                data: pd,
                dataType: "json",
                error: function (textstatus) {

                    alert('添加返回失败');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var obj = eval(result);
                    if ((obj.result + "").substr(0, 2) == "出错") { alert(obj.result); result; }
                    var data = { "Id": obj.result, "text": title, "ParentId": id, "color": "black", "icon": "glyphicon glyphicon-pencil" }
                    AllNode.push(data);
                    var jsonDataTree = TreeData(AllNode, "无");
                    NodeOperate(jsonDataTree);
                    Nodeid = null;
                }
            });
        }
        //添加分类
        function AddKind() {
            var id = Nodeid;
            var kind = $(window.parent.window.document.getElementById("kind")).val();
            if (id == null || kind.length == 0) { id = "无"; }
            var pd = { Name: kind, ParentId: id }
            $.ajax({
                type: "post",
                url: '@Url.Action("AddKind")',//注意此文件必须与当前文件在同一目录下
                data: pd,
                dataType: "json",
                error: function (textstatus) {

                    alert('添加返回出错');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var obj = eval(result);
                    if (obj.result.length <= 6) { alert(obj.result); return; }
                    var data = { "Id": obj.result, "text": kind, "ParentId": id, "color": "blue", "icon": "glyphicon glyphicon-folder-open" }
                    AllNode.push(data);
                    var jsonDataTree = TreeData(AllNode, "无");
                    NodeOperate(jsonDataTree);
                    Nodeid = null;
                }
            });
        }
        //移动
        function Move(e) {
            if (Nodeid == null) { return; }
            var new_node;
            var node_text, node_newtext;
            if ($('#move').html() == "移动") {
                node_move = Nodeid; $('#move').html('选择分类');
                node_text = NodeText;
            } else if ($('#move').html() == "选择分类") {
                if (IsKind == false) { alert('请选择分类'); return; }
                new_node = Nodeid; node_newtext = NodeText;
                if (confirm("确定将(" + node_text + ")移动到(" + node_newtext + ")分类中吗?") == true) {
                    var old_AllNode = JSON.stringify(AllNode);
                    for (var i = 0; i < AllNode.length; i++) {
                        if (AllNode[i]["Id"] == node_move) {
                            AllNode[i]["ParentId"] = new_node;
                            var data = TreeData(AllNode, "无");
                            NodeOperate(data); $('#move').html('移动');
                            var pd = { node: node_move, newnode: new_node }
                            $.ajax({
                                type: "post",
                                url: '@Url.Action("MoveKind")',//注意此文件必须与当前文件在同一目录下
                                data: pd,
                                dataType: "json",
                                error: function (textstatus) {

                                    alert('移动返回出错');
                                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                                },
                                success: function (result) {//result为任意定义的用于装载参数变量
                                    var obj = eval(result);
                                    if (obj.result != "移动成功") {
                                        alert(obj.result);
                                        AllNode = JSON.parse(old_AllNode);
                                        var data = TreeData(AllNode, "无");
                                        NodeOperate(data); $('#move').html('移动');
                                    }
                                }
                            });
                        }
                    }
                }
            }


        }
        //切换
        Shift = function () {
            $(window.parent.window.document.getElementById("Kind_f")).css("width", "0px");
            $(window.parent.window.document.getElementById("Search_f")).css("width", "19%");
            $(window.parent.window.document.getElementById("Search_f").contentWindow.load())
        }
</script>