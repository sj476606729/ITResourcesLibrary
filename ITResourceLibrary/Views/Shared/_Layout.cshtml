<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IT资源库</title>
    <link href="~/Content/Loading.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Frame/bootstrap/js/bootstrap-treeview.js"></script>
    <link href="~/Frame/bootstrap/css/bootstrap.css" rel="stylesheet" />
</head>
<body id="body">
 
    <div style="height:8%;width:100%;background-color:darkslategray;line-height:8%">
        <table style="height:100%;width:100%">
            <tr style="height:100%;">
                <td valign="middle" style="width:5%;"><img style="margin-left:10%; height:4%;" src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1520771949944&di=0fbaa60ae3326adb996437f4f833dfb0&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fimage%2Fc0%253Dshijue1%252C0%252C0%252C294%252C40%2Fsign%3D91cb81098082b90129a0cb701be4c302%2F4b90f603738da97767252c05ba51f8198618e392.jpg"></td>
                <td style=" width:5%;color:white">当前登陆:</td>
                <td style="width:5%;color:white">@Html.Action("GetUserName", "Shared")</td>
                <td style="width:4%"><label class="control-label" style="color:lightblue;font-size:larger;">总条目</label></td>
                <td style="width:10%"><label class="form-control" id="Count" style="width:30%;background-color:chocolate; color:aliceblue;">0</label></td>
                <td valign="middle" style="width:15%"><input type="text" class="form-control" id="kind" style=" width:60%; border:none;background-color:darkslategray;color:chartreuse;text-align:center" placeholder="分类名称" /></td>
                <td valign="middle" style="width:40%"><input type="text" class="form-control" id="title" style="width:60%; border:none;background-color:darkslategray;color:aqua;font-size:130%; text-align:center" placeholder="代码标题" /></td>
                <td style="width:15%"><label id="author" style="color:crimson;font-size:100%;text-align:center"></label></td>
            </tr>
        </table>
        
        
    </div>
    <div style="height:88%; width:100%;margin-top:0.1%">
        <table style="width:18%;height:100%;margin-left:1%;float:left">
            <tr style="height:5%">
                <td style="width:100%;padding-top:1%" class="btn-group">
                    <button style="width:23%; float:left;font-size:85%" class="btn btn-default" id="addcode" onclick="AddData()">添加数据</button>
                    <button style="width:23%;float:left;font-size:85%" class="btn btn-default" id="addkind" onclick="AddKind()">添加分类</button>
                    <button style="width:19%;float:left;font-size:85%" class="btn btn-default" onclick="Modify()">修改</button>
                    <button style="width:19%;float:left;font-size:85%" class="btn btn-default" onclick="Delete()">删除</button>
                    <button style="width:15%;float:left;font-size:85%" class="btn btn-default" onclick="Shift()">切换</button>
                </td>
            </tr>
            <tr style="height:5%">
                <td style="width:100%;padding-top:1%">
                    <button style="width:98%;" id="move" class="btn btn-default" onclick="Move(this)">移动</button>
                </td>
            </tr>
            <tr style="height:98%">
                <td valign="top" style="padding-top:2%;">
                    <div id="load" style="height:20%;margin-left:30%"><div class='loader loader--spinningDisc'></div></div>
                    <div id="tree" style="width:100%;height:100%; overflow:auto"></div>

                </td>
            </tr>
        </table>
        <div style="width:0%;height:100%;float:left">

        </div>
        <div class="container body-content" style="width:80%;height:100%;float:left">
            @RenderBody()
            <hr />
        </div>
    </div>
    
    
    @RenderSection("scripts", required: false)
    <script>
        var Nodeid, NodeText, IsKind = false;
        var AllNode, node_move;
        var frames, NodeAuthor;

        $(function () {
            $('#body').css("height", document.documentElement.clientHeight);
            frames = window.parent.window.document.getElementById("frame");
            $.ajax({
                type: "get",
                url: '@Url.Action("Kind","Shared",new { id="Initial"})',//注意此文件必须与当前文件在同一目录下
                dataType: "json",
                error: function () {
                    alert("初始化数据无返回");
                    $('#load').remove();
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    AllNode = eval(result);
                    var data = TreeData(AllNode, "无");
                    NodeOperate(data);
                    $('#load').remove();
                }
            });
            $('#Count').html(@Html.Action("CodeCount","Shared"));
        });

        //处理分类为树状图
        function TreeData(data, parentId) {

            var itemArr = [];
            for (var i = 0; i < data.length; i++) {
                var node = data[i];
                //data.splice(i, 1)
                if (node["ParentId"] == parentId) {
                    var newNode = { Id: node.Id, text: node["text"], color: node.color, icon: node.icon };
                    for (var j = 0; j < data.length; j++) {
                        if (data[j].ParentId == node.Id) {
                            newNode["nodes"] = TreeData(data, node.Id); break;
                        }
                    }
                    itemArr.push(newNode);
                }
            }
            return itemArr;
        }
        //节点操作
        function NodeOperate(jsonDataTree) {
            //导入分类数据
            $('#tree').treeview({
                data: jsonDataTree,        // data is not optionals
                levels: 1,
                backColor: 'white',
                collapseIcon: 'glyphicon glyphicon-chevron-down'
            })
            //选中操作
            $('#tree').on('nodeSelected', function (event, node) {
                Nodeid = node.Id; NodeText = node.text;
                IsKind = false;
                if (node.color != "black") {
                    IsKind = true; $('#addcode').attr("disabled", false);
                    $('#addkind').attr("disabled", false);
                    return;
                }

                $('#addcode').attr("disabled", true);
                $('#addkind').attr("disabled", true);
                $.ajax({
                    type: "get",
                    url: '@Url.Action("GetCode","Shared")?Title=' + NodeText,//注意此文件必须与当前文件在同一目录下
                    dataType: "json",
                    error: function (textstatus) {

                        alert('无返回数据')
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        frames.contentWindow.setHtml(decodeURI(obj["Code"]));
                        $(window.parent.window.document.getElementById("title")).val(obj["Title"]);
                        NodeAuthor = obj["Author"];
                        $(window.parent.window.document.getElementById("author")).html("作者：" + obj["Author"]);

                    }
                });

            });
        }
        //修改
        function Modify() {
            if (Nodeid == null) { return; }
            var Old_AllNode = JSON.stringify(AllNode);
            if (IsKind) {
                var name = $(window.parent.window.document.getElementById("kind")).val();

                for (var i = 0; i < AllNode.length; i++) {
                    if (AllNode[i]["Id"] == Nodeid) {
                        AllNode[i]["text"] = name;
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data); break;
                    }
                }
                var pd = { Name:name, Key:Nodeid }
                $.ajax({
                    data:pd,
                    type: "post",
                    url: '@Url.Action("ModifyKind", "Shared")',
                    dataType: "json",
                    error: function (textstatus) {
                        AllNode = JSON.parse(Old_AllNode);
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data);
                        alert('修改分类无返回');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var data = eval(result)
                       
                        if (data["result"] == "修改失败") alert("修改失败");
                    }
                });
            } else {
                //if (window.parent.USER != NodeAuthor) { alert("不能修改非本账户代码数据"); return; }
                var title = $("#title").val(), Code = encodeURI(frames.contentWindow.getHtml());
                for (var i = 0; i < AllNode.length; i++) {
                    if (AllNode[i]["Id"] == Nodeid) {
                        AllNode[i]["text"] = title;
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data); break;
                    }
                }
                var pd = { Title: title, Code: Code, Key: Nodeid, OldTitle: NodeText }
                $.ajax({
                    type: "post",
                    url: '@Url.Action("ModifyCode", "Shared")',//注意此文件必须与当前文件在同一目录下
                    data: pd,
                    dataType: "json",
                    error: function (textstatus) {
                        AllNode = JSON.parse(Old_AllNode);
                        var data = TreeData(AllNode, "无");
                        NodeOperate(data);
                        alert('修改代码无返回');
                        // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                    },
                    success: function (result) {//result为任意定义的用于装载参数变量
                        var obj = eval(result);
                        if ((obj.result + "").substr(0, 2) == "出错") {
                            alert(obj.result);
                            AllNode = JSON.parse(Old_AllNode);
                            var data = TreeData(AllNode, "无");
                            NodeOperate(data);
                        }
                    }
                });
            }
        }

        //添加数据
        function AddData() {
            var data_ = frames.contentWindow.getHtml() + "";
            if (data_.indexOf("<hr />") < 0 || data_.indexOf("<p>参考网址：<a href=") < 0) { alert("添加代码不规范"); return; }
            if (data_.indexOf("<hr />") < data_.indexOf("<p>参考网址：<a href=")) { alert("添加代码不规范"); return; }
            if (Nodeid == null) { return; }
            var data = encodeURI(frames.contentWindow.getHtml());
            var title = $("#title").val();
            var id = Nodeid;
            var pd = { "id": "AddData", "Title": title, "Code": data, "Key": id, "User": window.parent.window.USER }
            $.ajax({
                type: "post",
                url: '../Ashx/Handler.ashx',//注意此文件必须与当前文件在同一目录下
                data: pd,
                dataType: "json",
                error: function (textstatus) {

                    alert('添加返回失败');
                    // $.dialog.alert('错误信息：' + errorThrown, function () { }, winObj);
                },
                success: function (result) {//result为任意定义的用于装载参数变量
                    var obj = eval(result);
                    if ((obj.result + "").substr(0, 2) == "出错") { alert(obj.result); result; }
                    var data = { "Id": obj.result, "text": title, "ParentId": id, "color": "black", "icon": "glyphicon glyphicon-pencil" }
                    AllNode.push(data);
                    var jsonDataTree = TreeData(AllNode, "无");
                    NodeOperate(jsonDataTree);
                    Nodeid = null;
                }
            });
        }
    </script>
</body>
</html>
